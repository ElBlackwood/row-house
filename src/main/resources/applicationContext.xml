<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <context:annotation-config />
    <context:component-scan base-package="com.event" />
    
    <context:property-placeholder location="classpath:site.properties" />
    
    <mvc:annotation-driven/>
    
    <task:annotation-driven executor="executor"/>
    <task:executor id="executor" pool-size="2"/>
    
    <mvc:resources mapping="/resources/**" location="/resources/" />
    
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <tx:annotation-driven />
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="dataSource" ref="dataSource"/>

    </bean>
	<bean id="mailSender" 
	        class="org.springframework.mail.javamail.JavaMailSenderImpl">          
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="lukeblackwood@gmail.com" />
		<property name="password" value="ohhyhvqcwucdszzf" />
		<property name="javaMailProperties">
		   <props>
      	      <prop key="mail.smtp.auth">true</prop>
      	      <prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>
	
 
<!--     <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> -->
<!--          setting maximum upload size -->
<!--         <property name="maxUploadSize" value="100000" /> -->
<!--     </bean> -->
    
    <beans profile="default">
<!--         <jdbc:embedded-database id="dataSource"/>         -->
<!--         <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> -->
<!--             <property name="dataSource" ref="dataSource"/> -->
<!--             <property name="jpaVendorAdapter"> -->
<!--                 <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/> -->
<!--             </property> -->
<!--             <property name="jpaProperties"> -->
<!--                 <props> -->
<!--                     <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop> -->
<!--                     <prop key="hibernate.hbm2ddl.auto">create</prop> -->
<!--                 </props> -->
<!--             </property> -->
<!--         </bean> -->
<!--         <bean class="java.net.URI" id="dbUrl"> -->
<!--             <constructor-arg value="postgres://postgres:admin@localhost:5432/postgres"/> -->
<!--         </bean> -->

        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
            <property name="url" value="jdbc:postgresql://localhost:5432/postgres"/>
            <property name="username" value="postgres"/>
            <property name="password" value="admin"/>
        </bean>
        
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
            </property>
            <property name="jpaProperties">
                <props>
                    <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                    <prop key="hibernate.show_sql">true</prop>
                    <!-- change this to 'verify' before running as a production app -->
                    <prop key="hibernate.hbm2ddl.auto">update</prop>
                </props>
            </property>
        </bean>
    </beans>

    <beans profile="prod">
        <bean class="java.net.URI" id="dbUrl">
            <constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
        </bean>

        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
            <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
            <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
            <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
        </bean>
        
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
            </property>
            <property name="jpaProperties">
                <props>
                    <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                    <prop key="hibernate.show_sql">true</prop>
                    <!-- change this to 'verify' before running as a production app -->
                    <prop key="hibernate.hbm2ddl.auto">update</prop>
                </props>
            </property>
        </bean>
    </beans>

</beans>
